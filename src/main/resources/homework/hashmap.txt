作业：
    自定义实现一个简单的HashMap。

hashmap之所以有很高的查询速度，要归功于索引。
假设有一个key，需要查询其对应的value。
1）通过二次哈希，计算出key的hash值h。
2）h & (length - 1) 来获取散列链表所在的index（数组的index）。
3）只需要遍历找到的链表即可快速查询key所对应的value。

二次哈希的作用：
当数据量大时，计算出的索引分布的更开，均匀些。

hash相同，key不一定相同。
key相同，hash一定相同。

key可能为空，但是value可能是有值得。